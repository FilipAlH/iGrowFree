[{"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\index.js":"1","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\reportWebVitals.js":"2","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\App.js":"3","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\LoginForm.js":"4","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Footer.js":"5","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\SignupForm.js":"6","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Habit.js":"7","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Blog.js":"8","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Header\\Header.js":"9","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\SingleThread.js":"10","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Home.js":"11","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\index.js":"12","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\auth.js":"13","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\mutations.js":"14","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\queries.js":"15","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Quote\\Quote.js":"16","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\habit.js":"17","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\HabitList.js":"18","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\HabitForm\\HabitForm.js":"19","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\Lifestylepreview.js":"20","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\ThreadList\\index.js":"21","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\CommentList\\index.js":"22","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\CommentForm\\index.js":"23","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\ThreadForm\\index.js":"24","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\HabitLists.js":"25","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\listitem.js":"26","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\userlifestylepreview.js":"27","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\habits.js":"28","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklist.js":"29","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\gettitle.js":"30","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklists.js":"31"},{"size":500,"mtime":1637686352666,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1637686352667,"results":"34","hashOfConfig":"33"},{"size":2771,"mtime":1638254038683,"results":"35","hashOfConfig":"33"},{"size":5535,"mtime":1638230626531,"results":"36","hashOfConfig":"33"},{"size":664,"mtime":1638226478946,"results":"37","hashOfConfig":"33"},{"size":6348,"mtime":1638226454603,"results":"38","hashOfConfig":"33"},{"size":1629,"mtime":1638247561724,"results":"39","hashOfConfig":"33"},{"size":1165,"mtime":1638255877019,"results":"40","hashOfConfig":"33"},{"size":3407,"mtime":1638226454597,"results":"41","hashOfConfig":"33"},{"size":1860,"mtime":1638254038699,"results":"42","hashOfConfig":"33"},{"size":635,"mtime":1638254403994,"results":"43","hashOfConfig":"33"},{"size":1665,"mtime":1638254353743,"results":"44","hashOfConfig":"33"},{"size":1043,"mtime":1637686352669,"results":"45","hashOfConfig":"33"},{"size":3251,"mtime":1638247577676,"results":"46","hashOfConfig":"33"},{"size":2002,"mtime":1638247577677,"results":"47","hashOfConfig":"33"},{"size":485,"mtime":1638199342247,"results":"48","hashOfConfig":"33"},{"size":495,"mtime":1638244029122,"results":"49","hashOfConfig":"33"},{"size":958,"mtime":1638242710520,"results":"50","hashOfConfig":"33"},{"size":3169,"mtime":1638247577667,"results":"51","hashOfConfig":"33"},{"size":3371,"mtime":1638256683299,"results":"52","hashOfConfig":"33"},{"size":2107,"mtime":1638226454599,"results":"53","hashOfConfig":"33"},{"size":1358,"mtime":1638178566690,"results":"54","hashOfConfig":"33"},{"size":3021,"mtime":1638178566688,"results":"55","hashOfConfig":"33"},{"size":5069,"mtime":1638254038685,"results":"56","hashOfConfig":"33"},{"size":5084,"mtime":1638247561711,"results":"57","hashOfConfig":"33"},{"size":1246,"mtime":1638256546247,"results":"58","hashOfConfig":"33"},{"size":2063,"mtime":1638256797811,"results":"59","hashOfConfig":"33"},{"size":767,"mtime":1638247561715,"results":"60","hashOfConfig":"33"},{"size":1313,"mtime":1638230626526,"results":"61","hashOfConfig":"33"},{"size":862,"mtime":1638256426380,"results":"62","hashOfConfig":"33"},{"size":5012,"mtime":1638247561714,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3btev0",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\index.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\reportWebVitals.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\App.js",["142"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport SingleThread from './pages/SingleThread';\nimport BlogThreads from './pages/Blog'\nimport SignupForm from './pages/SignupForm';\nimport LoginForm from './pages/LoginForm';\nimport Habit from './pages/Habit';\n// import HabitForm from './components/HabitForm/HabitForm';\nimport UserThreadList from './components/UserThreadList';\nimport Footer from './pages/Footer';\n\n\n// import Profile from './pages/User';\nimport Header from './components/Header/Header';\n// import Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex flex-col h-screen justify-between sticky\" style={{\n          background: `url(\"https://picsum.photos/id/1018/1000\")`, backgroundSize: 'cover', backgroundAttachment: 'fixed'\n        }}>\n          <Header />\n          <div className=\"\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <LoginForm />\n            </Route>\n            <Route exact path=\"/signup\">\n              <SignupForm />\n            </Route>\n            {/* <Route exact path=\"/habitform\">\n              <HabitForm />\n            </Route> */}\n            {/* <Route exact path=\"/profiles/:username\">\n              <Profile />\n            </Route> */}\n            <Route exact path=\"/habit\">\n              <Habit />\n            </Route>\n            <Route exact path=\"/threads/:threadId\">\n              <SingleThread />\n            </Route>\n            <Route exact path=\"/threads\">\n              <BlogThreads />\n            </Route>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\LoginForm.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Footer.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\SignupForm.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Habit.js",["143"],"import { React } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Habits from '../components/HabitList/habit'\nimport HabitList from '../components/HabitList/HabitList'\nimport HabitForm from '../components/HabitForm/HabitForm';\nimport Auth from '../utils/auth';\nimport { QUERY_USER } from '../utils/queries';\n\n\nconst Habit = () => {\n    const { loading, data } = useQuery(QUERY_USER, {\n        variables: {\n            username: Auth.getProfile().data.username\n        }\n    });\n    const user = data?.user || []\n    const habitData = data?.user.userDefinedHabits || []\n    console.log()\n\n    return (\n        <div className=\"w-screen\">\n            <h3 className=\"mt-6 text-center text-3xl font-bold text-gray-600 mb-10\">Habit List:</h3>\n            <div className=\"lg:flex items-center justify-center w-screen\">\n                <div className=\"lg:w-8/12 lg:mr-7 lg:mb-0 mb-7 bg-white p-2 shadow rounded bg-opacity-60\">\n                    {/* {habitData.map(habit => { */}\n                    {/* return ( */}\n                    <div>\n                        <p className=\"\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around' }}>\n                            <ul style={{ marginLeft: '20px' }}>\n                                <Habits user={user} />\n                            </ul>\n                            <HabitList habit={habitData} />\n                        </p>\n\n                    </div>\n                    {/* ) */}\n                    {/* })} */}\n                    <HabitForm />\n                </div>\n            </div>\n        </div >\n    )\n}\n\n\nexport default Habit;","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Blog.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\SingleThread.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Home.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\index.js",["144","145"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_THREADS } from '../../utils/queries';\nimport { QUERY_ME } from '../../utils/queries';\nimport Auth from '../../utils/auth';\nimport ListItem from './listitem';\n\nconst UserThreadList = () => {\n    // const authUser = Auth.getProfile().data.username;\n\n    const threadQuery = useQuery(QUERY_THREADS);\n    const userQuery = useQuery(QUERY_ME);\n\n    const loading = threadQuery.loading || userQuery.loading;\n\n    // const thread = threadQuery?.data;\n    const users = userQuery?.data;\n\n    const usersArr = users?.me\n\n    if (loading) {\n        return <div>Loading...</div>;\n\n    } else {\n        // console.log(thread?.threads, usersArr, users?.me[2].userThreads[0]._id)\n        //console.log(users?.me[4].userThreads)\n\n    }\n\n    // let userThreadsArr = [];\n    let usersWithThreads = [];\n    usersArr.forEach((user, index) => {\n\n        if (users?.me[index].userThreads) {\n\n            usersWithThreads.push(user)\n        }\n    });\n\n    // usersWithThreads.forEach((usersThreads, index) => {\n    //     userThreadsArr.push(<li key={index}>{usersThreads}</li>)\n    // });\n    console.log(usersWithThreads)\n    let info = [];\n    usersWithThreads.forEach((user) => {\n        for (let i = 0; i < user.userThreads.length; i++) {\n            info.push({ name: user.username, thread: user.userThreads[i] })\n        }\n    })\n    console.log(info)\n    return (\n        <div>\n            {info && info.map((info, index) => (\n                <ListItem info={info} index={index} />\n            ))}\n        </div>\n    )\n\n}\n\nexport default UserThreadList;","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\auth.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\mutations.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\queries.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Quote\\Quote.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\habit.js",["146","147"],"import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\n\nconst Habits = ({ user }) => {\n    console.log(user)\n    return (\n        <div className=\"flex flex-col\">\n            {user.userDefinedHabits && user.userDefinedHabits.map((habit) => (\n                <li className=\"pb-3 mt-5 text-xl font-bold underline text-base\" key={habit.habitName}>{habit.habitName}:</li>\n            ))}\n        </div>\n    )\n}\n\nexport default Habits","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\HabitList.js",["148","149","150"],"import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\nimport HabitLists from './HabitLists'\n\nexport default ({habit}) => {\n\n\n    console.log(habit)\n\n    const allHabits = []\n\n    habit.forEach(habit => {\n        allHabits.push({ name: habit.habitName, frequency: habit.frequency})\n    });\n    console.log(allHabits)\n\n    const allChecklists = []\n\n    for(let i = 0; i < allHabits.length; i++){\n        const checkList = [allHabits[i].name]\n        \n        for(let j = 0; j < allHabits[i].frequency; j++){\n            checkList.push({_id: j, label: `Day ${j +1}`})\n        }\n        console.log(checkList)\n        allChecklists.push(checkList)\n    }\n\n    console.log(allChecklists)\n    \n    return (\n\n\n        \n\n\n        <div>\n            {allChecklists && allChecklists.map((checklist) => (\n                <HabitLists checkList = {checklist} />\n            ))}\n        </div> \n    );\n  };","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\HabitForm\\HabitForm.js",["151","152","153"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_USER_HABIT } from '../../utils/mutations';\nimport { QUERY_HABITS, QUERY_USER } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst HabitForm = () => {\n  const [formStateName, setformStateName] = useState({ habitName: '' });\n  const [formStateFrequency, setformStateFrequency] = useState({ frequency: 0 });\n  const [addHabitList, { error }] = useMutation(ADD_USER_HABIT);\n\n  const handleFormSubmit = async (event) => {\n\n    // event.preventDefault();\n\n    console.log({ ...formStateName, ...formStateFrequency })\n    try {\n\n      const { data } = await addHabitList({\n        variables: { username: Auth.getProfile().data.username, habit: formStateName.habitName, frequency: Number(formStateFrequency.frequency) },\n      });\n\n    } catch (err) {\n      console.error(err);\n    }\n\n    setformStateName({ habitName: '' })\n    setformStateFrequency({ frequency: 0 })\n  };\n  const handleChangeName = (event) => {\n    const { value } = event.target;\n    setformStateName({ habitName: (value) })\n  };\n  const handleChangeFrequency = (event) => {\n    const { value } = event.target;\n    setformStateFrequency({ frequency: (value), })\n  };\n\n  return (\n    <div>\n      <h3 className=\"mt-6 text-center text-xl font-bold underline text-gray-800 mb-2\">Add Habit</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n          // onSubmit={handleFormSubmit}\n          >\n\n            <div className=\"w-full flex justify-center overflow-hidden bg-primary text-light p-2 m-0\">\n\n              <textarea\n                name=\"HabitName\"\n                placeholder=\"Here's a new Habit...\"\n                value={formStateName.habitName}\n                onChange={handleChangeName}\n              ></textarea>\n            </div>\n\n            <div className=\"w-full flex justify-center overflow-hidden bg-primary text-light p-2 m-0\">\n\n              <textarea\n                name=\"frequency\"\n                placeholder=\"Times per week?\"\n                value={formStateFrequency.frequency}\n                onChange={handleChangeFrequency}\n              ></textarea>\n            </div>\n\n            <div className=\"w-full flex justify-center overflow-hidden\">\n              <button className=\"flex py-2 px-4 mt-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-400 hover:bg-blue-500 transition duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" onClick={handleFormSubmit} type=\"submit\">\n                Add Habit\n              </button>\n            </div>\n            {error && (\n              <div className=\"w-full overflow-hidden\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to create New Habits. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default HabitForm;\n","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\Lifestylepreview.js",["154","155","156","157"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Auth from '../../utils/auth';\nimport { QUERY_USER } from '../../utils/queries'\nimport Userlifestyle from './userlifestylepreview';\nimport UserThreads from '../UserThreadList'\nimport ThreadForm from \"../UserThreadList/index\";\n\nconst Lifestylepreview = ({ lifeStyles = [] }) => {\n    lifeStyles.forEach(lifestyle => {\n        console.log(lifestyle.lifeStyleType, lifestyle.LifeStyleHabits)\n    });\n\n    if (!lifeStyles.length) {\n        return <h3>nothing to see here...</h3>\n    } else if (Auth.loggedIn()) {\n        return (\n            <div style={{\n                background: `url(\"https://picsum.photos/id/1018/1000\")`, backgroundSize: 'cover', backgroundAttachment: 'fixed'\n            }}>\n                <div className=\"pb-8\">\n                    <div>\n                        <Userlifestyle />\n                    </div>\n                    <div>\n                        <div className=\"w-100 py-4 px-6 text-gray-800 flex flex-col mx-80 justify-between bg-white rounded-lg shadow-xl bg-opacity-60\">\n                            <h2 className=\"font-bold text-xl text-center leading-tight underline truncate mt-4\">Blog feed</h2>\n                        </div>\n                        <ThreadForm />\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"w-screen h-auto\">\n                <div className=\"py-8 w-screen\">\n                    <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-600 mb-10\">What lifestyle would you want...?</h2>\n                    <div className=\"lg:flex items-center justify-center w-screen\">\n                        {lifeStyles &&\n                            lifeStyles.map((lifestyle) => (\n                                <div className=\"lg:w-3/12 lg:mr-7 lg:ml-7 lg:mb-0 mb-7 bg-white p-6 shadow-xl sm:rounded-xl sm:p-10 bg-opacity-60\" key={lifestyle._id}>\n                                    <div className=\"rounded sm:rounded-xl overflow-hidden shadow-lg bg-opacity-60\">\n                                        <div className=\"px-6 py-4\">\n                                            <div className=\"\">\n                                                <p className=\"text-gray-600 text-xl font-bold text-base text-center \">{lifestyle.lifeStyleType}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"px-6 pt-4 pb-2\">\n                                        <p className=\"text-500 text-base\">\n                                            <ul style={{ marginLeft: '10px' }}>\n                                                {lifestyle.LifeStyleHabits && lifestyle.LifeStyleHabits.map((habit) => (\n                                                    <li key={habit.habitName}> - {habit.habitName}</li>\n                                                ))}\n                                            </ul>\n                                        </p>\n                                    </div>\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Lifestylepreview","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\ThreadList\\index.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\CommentForm\\index.js",["158"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ threadId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const data = await addComment({\n        variables: {\n          threadId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-wrap w-full   rounded-lg shadow-xl bg-opacity-60 mt-4\">\n      <div className=\"w-full overflow-hidden\">\n        <h4 className=\"py-2 px-4 font-medium text-center text-gray-500 text-xl rounded\" >Join the Discussion!</h4>\n      </div>\n      {Auth.loggedIn() ? (\n        <><div className=\"w-full overflow-hidden\">\n          <p\n            className={`card-header bg-primary text-light p-2 ml-4  ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p >\n          <form\n            className=\"w-full overflow-hidden bg-primary text-center text-light p-2 m-0\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"w-full overflow-hidden bg-primary text-center text-light  p-2 m-0\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"w-full overflow-hidden bg-primary text-light  p-2 m-0\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"w-full overflow-hidden bg-primary text-center text-light  p-2 m-0\">\n              <button className=\"flex justify-center w-40 py-2 px-4 mt-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-400 hover:bg-blue-500 transition duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </div>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to add a comment. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div >\n  );\n};\n\nexport default CommentForm;","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\ThreadForm\\index.js",["159","160","161","162","163"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\n\nimport { ADD_THREAD } from '../../utils/mutations';\nimport { QUERY_ME, QUERY_THREADS } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThreadForm = () => {\n  const [ThreadText, setThreadText] = useState('');\n  const [ThreadTitle, setThreadTitle] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  // const [ThreadAuthor, setThreadAuthor] = useState(Auth.getProfile().data._id)\n\n  const [addThread, { error }] = useMutation(ADD_THREAD);\n  //   , {\n  //   update(cache, { data: { addThread } }) {\n  //     try {\n  //       const { threads } = cache.readQuery({ query: QUERY_THREADS });\n\n  //       cache.writeQuery({\n  //         query: QUERY_THREADS,\n  //         data: { threads: [addThread, ...threads] },\n  //       });\n  //     } catch (e) {\n  //       console.error(e);\n  //     }\n\n  //     // update me object's cache\n  //     const { me } = cache.readQuery({ query: QUERY_ME });\n  //     cache.writeQuery({\n  //       query: QUERY_ME,\n  //       data: { me: { ...me, threads: [...me.userThreads, addThread] } },\n  //     });\n  //   },\n  // }\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // getProfile() is unknown so data wont get read\n      const { data } = await addThread({\n        variables: {\n          ThreadText: ThreadText,\n          ThreadTitle: ThreadTitle,\n        },\n      }, console.log(Auth.getProfile().data._id));\n\n      setThreadTitle('');\n      setThreadText('');\n    } catch (err) {\n      console.error(err);\n    }\n    window.location.reload();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'ThreadText' && value.length <= 1000) {\n      setThreadText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  const handleChangeTitle = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'ThreadTitle') {\n      setThreadTitle(value);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-wrap overflow-hidden bg-white rounded-lg shadow-xl bg-opacity-60 mt-4 w-100 mx-80\">\n      <div className=\"w-full overflow-hidden\">\n        <h3 className=\"py-2 px-4 font-medium text-center text-gray-500 text-xl rounded \">Create your Post here!</h3>\n      </div>\n\n      {Auth.loggedIn() ? (\n        <><div className=\"w-full overflow-hidden\">\n          <p\n            className={`card-header bg-primary text-light p-2 ml-4  ${characterCount === 1000 || error ? 'text-danger' : ''\n              }`}\n\n          >\n            Character Count: {characterCount}/1000\n          </p>\n          <form\n            className=\"w-full overflow-hidden bg-primary text-center text-light p-2 m-0\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"w-full overflow-hidden bg-primary text-center text-light  p-2 m-0\">\n              <textarea\n                name=\"ThreadTitle\"\n                placeholder=\"Enter your post title\"\n                value={ThreadTitle}\n                className=\"w-full overflow-hidden bg-primary text-light  p-2 m-0\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChangeTitle}\n              ></textarea>\n            </div>\n\n            <div className=\"w-full overflow-hidden bg-primary text-center text-light  p-2 m-0\">\n              <textarea\n                name=\"ThreadText\"\n                placeholder=\"Enter your post\"\n                value={ThreadText}\n                className=\"w-full overflow-hidden bg-primary text-light  p-2 m-0\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n            <p\n            className={`m-0 ${\n              characterCount === 1000 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/1000\n          </p>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"flex justify-center w-40 py-2 px-4 mt-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-400 hover:bg-blue-500 transition duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" type=\"submit\">\n                Add Thread\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </div>\n        </>\n      ) : (\n        <div className=\"w-full overflow-hidden\">\n          <h3 className=\"card-header bg-primary text-center text-light p-2 m-0\">\n            You need to be logged in to make a thread. Please <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n          </h3>\n        </div>\n\n      )}\n\n\n    </div>\n  );\n};\n\nexport default ThreadForm;","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\HabitLists.js",["164","165","166","167","168","169","170","171"],"/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { useChecklist } from 'react-checklist'\nimport { QUERY_USER } from '../../utils/queries';\nimport { UPDATE_USER_HABIT_STATE, DELETE_USER_HABIT_STATE } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\nexport default ({ checkList }) => {\n  //function to compare two arrays\n  Array.prototype.equals = function (array) {\n    if (!array)\n      return false;\n\n    if (this.length != array.length)\n      return false;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] instanceof Array && array[i] instanceof Array) {\n        if (!this[i].equals(array[i]))\n          return false;\n      }\n      else if (this[i] != array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const { loading, data } = useQuery(QUERY_USER, {\n    variables: { username: Auth.getProfile().data.username }\n  })\n\n  const user = data.user.userCheckListHabits || []\n  console.log(data.user)\n\n  const filteredCheckList = []\n\n  for (let i = 1; i < checkList.length; i++) {\n    filteredCheckList.push(checkList[i])\n  }\n  //console.log(checkList)\n  //console.log(filteredCheckList)\n\n  const importedChecklist = []\n\n  user.forEach(habit => {\n    importedChecklist.push({ name: habit.Name, state: habit.State })\n  });\n\n  console.log(importedChecklist)\n  //console.log(checkList[0])\n\n  const { handleCheck, checkedItems, setCheckedItems } = useChecklist(filteredCheckList, {\n    key: '_id',\n    keyType: 'number',\n  });\n\n  let setArray = []\n  console.log(importedChecklist)\n  console.log(checkList[0])\n  const handleLoad = () => {\n    console.log('loading')\n    for (let i = 0; i < importedChecklist.length; i++) {\n\n      if (importedChecklist[i].name === checkList[0]) {\n        let userArray = user[i].State\n        setArray = []\n        for (let i = 0; i < userArray.length; i++) {\n          setArray.push(userArray[i][0])\n        };\n\n        console.log(importedChecklist[i].name)\n        console.log(checkList[0])\n        console.log(setArray)\n        console.log([...checkedItems])\n\n        if (setArray.equals([...checkedItems])) {\n          setArray = []\n          console.log('next')\n        } else {\n          console.log(`set array to ${setArray}`)\n          setCheckedItems(new Set(setArray))\n        }\n\n      } else {\n        console.log('does not exist')\n      }\n\n      setArray = []\n      console.log(setArray)\n    }\n  }\n\n  const handleReset = () => setCheckedItems(new Set());\n\n  console.log(checkedItems);      // Set(0) - handling with Set\n  console.log([...checkedItems]); // []     - handling with Array\n\n  const [updateHabit, { updateError }] = useMutation(UPDATE_USER_HABIT_STATE);\n  const [deleteHabit, { deleteError }] = useMutation(DELETE_USER_HABIT_STATE);\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const deleteData = await deleteHabit({\n        variables: {\n          username: Auth.getProfile().data.username,\n          habit: checkList[0],\n        },\n      });\n      const updateData = await updateHabit({\n        variables: {\n          username: Auth.getProfile().data.username,\n          habit: checkList[0],\n          state: [...checkedItems],\n        },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  // const [updateState, { updateData, updateLoading, updateError }] = useMutation(UPDATE_HABIT_STATE)\n  // if(updateLoading){console.log('loading update')}\n  // if(updateError){console.log('error updating')}\n  // const handleUpdate = () => {\n  //     updateState({ variables: {\n  //         username: Auth.getProfile().data.username,\n  //         habit: checkList[0],\n  //         state: [...checkedItems]\n  //     }})\n  // }\n  return (\n    <ul className=\"px-1 pt-3 pb-2 text-md text-base\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', marginLeft: '20px' }} key={'habit'}>\n      {filteredCheckList.map((v, i) => (\n        <li key={i} style={{ marginRight: '15px', marginTop: '10px' }}>\n          <input\n            type=\"checkbox\"\n            data-key={v._id}                  // 3\n            onChange={handleCheck}            // 4\n            checked={checkedItems.has(v._id)} // 5\n          />\n          <label>{v.label}</label>\n        </li>\n      ))}\n      <li style={{ marginRight: '10px' }}>\n        <button className=\"py-2 px-4 font-medium text-white bg-gray-500 rounded hover:bg-red-400 transition duration-300\" onClick={handleReset}>\n          Reset\n        </button>\n      </li>\n      <li style={{ marginRight: '10px' }}>\n        <button className=\"Load py-2 px-4 font-medium text-white bg-blue-500 rounded hover:bg-blue-400 transition duration-300\" onClick={handleLoad}>\n          Load\n        </button>\n      </li>\n      <li style={{ marginRight: '10px' }}>\n        <button className=\"py-2 px-4 font-medium text-white bg-green-500 rounded hover:bg-green-400 transition duration-300\" onClick={handleFormSubmit}>\n          Save Progress!\n        </button>\n      </li>\n    </ul>\n  );\n};","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\listitem.js",["172","173","174","175","176"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_THREADS } from '../../utils/queries';\nimport { QUERY_ME } from '../../utils/queries';\nimport Auth from '../../utils/auth';\nimport GetTitle from './gettitle';\n\nconst listItem = ({ info, index }) => {\n    return (\n\n        <li key={index} class=\"list-none\">\n            <div>\n                <div className=\"\">\n                    <div className=\"\">\n                        <div className=\"\">\n                            <div className=\"flex flex-col md:flex-row overflow-hidden bg-white rounded-lg shadow-xl  mt-4 w-100 mx-80 bg-opacity-60\">\n                                <div className=\"w-full py-4 px-6 text-gray-800 flex flex-col justify-between\">\n                                    {/* get titles for user threads */}\n                                    <div className=\"\">\n\n                                        <GetTitle info={info.thread._id} />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default listItem;","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\userlifestylepreview.js",["177"],"import React from 'react'\nimport { useQuery } from '@apollo/client'\n\nimport { QUERY_USER } from '../../utils/queries'\nimport Auth from '../../utils/auth';\n\nimport Habits from './habits'\nimport Checklist from './checklist'\n\n\nconst Userlifestyle = () => {\n    console.log(Auth.getProfile().data.username)\n    const { loading, data } = useQuery(QUERY_USER, {\n        variables: { username: Auth.getProfile().data.username }\n    })\n    console.log(data)\n    const user = data?.user || []\n\n    console.log(Auth.getProfile().data)\n    console.log(user)\n\n    return (\n        <div className=\"h-auto py-6 flex flex-col justify-center sm:py-12\">\n            <div className=\"py-8 w-screen\">\n                <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-800 mb-10\">Your lifestyle:</h2>\n                <div className=\"lg:flex items-center justify-center w-screen\">\n                    <div className=\"lg:w-8/12 lg:mr-7 lg:mb-0 mb-7 bg-white p-2 shadow-xl rounded-xl bg-opacity-60\" key={user.username}>\n                        <div className=\"flex items-center border-b border-gray-200 pb-6\">\n                            <div className=\"flex items-start justify-between w-full\">\n                                <div className=\"pl-3 w-full\">\n                                    <p className=\"text-gray-600 text-xl font-bold text-base text-center\">{user.userLifeStyle}</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"px-2\">\n                            <p className=\"\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around' }}>\n                                <ul style={{ marginLeft: '20px' }}>\n                                    <Habits user={user} />\n                                </ul>\n                                <Checklist user={user} />\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Userlifestyle","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\habits.js",["178"],"import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\n\nconst Habits = ({ user }) => {\n    console.log(user.userLifeStyle)\n    const userlifestyle = user.userLifeStyle\n    const { loading, data } = useQuery(QUERY_LIFESTYLE, {\n        variables: { LifeStyle: userlifestyle }\n    })\n    console.log(data)\n    const lifestyle = data?.lifeStyle || []\n    console.log(lifestyle)\n\n    return (\n        <div className=\"flex flex-col\">\n            {lifestyle.LifeStyleHabits && lifestyle.LifeStyleHabits.map((habit) => (\n                <li className=\"pb-3 mt-5 text-lg font-bold underline text-base\" key={habit.habitName}>{habit.habitName}:</li>\n            ))}\n        </div>\n    )\n}\n\nexport default Habits","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklist.js",["179"],"/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\nimport Checklists from './checklists';\n\nexport default ({ user }) => {\n    console.log(user.userLifeStyle)\n    const userlifestyle = user.userLifeStyle\n    console.log(userlifestyle)\n    const { loading, data } = useQuery(QUERY_LIFESTYLE, {\n        variables: { LifeStyle: userlifestyle }\n    })\n    console.log(data)\n    const lifestyle = data?.lifeStyle.LifeStyleHabits || []\n    console.log(lifestyle)\n\n    const allHabits = []\n\n    lifestyle.forEach(habit => {\n        allHabits.push({ name: habit.habitName, frequency: habit.frequency })\n    });\n    console.log(allHabits)\n\n    const allChecklists = []\n\n    for (let i = 0; i < allHabits.length; i++) {\n        const checkList = [allHabits[i].name]\n\n        for (let j = 0; j < allHabits[i].frequency; j++) {\n            checkList.push({ _id: j, label: `Day ${j + 1}` })\n        }\n        console.log(checkList)\n        allChecklists.push(checkList)\n    }\n\n    console.log(allChecklists)\n\n    return (\n\n\n\n\n        <div>\n            {allChecklists && allChecklists.map((checklist) => (\n                <Checklists checkList={checklist} />\n            ))}\n        </div>\n    );\n};\n\n","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\gettitle.js",["180","181","182","183"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_SINGLE_THREAD } from '../../utils/queries';\nimport { QUERY_ME } from '../../utils/queries';\nimport Auth from '../../utils/auth';\n\nconst GetTitle = ({ info }) => {\n    const { loading, data } = useQuery(QUERY_SINGLE_THREAD, {\n        variables: { threadId: info }\n    });\n\n\n    console.log(data)\n\n    console.log(info)\n    return (\n        <><div>\n            <h4 className=\"font-semibold text-xl leading-tight text-center truncate mb-2\">{data?.thread.ThreadTitle} </h4>\n        </div><div className=\"mt-2 p-4 mb-4\" style={{\n            fontSize: '18px',\n            border: '2px solid #1a1a1a',\n            lineHeight: '1.5',\n        }}>\n                {data?.thread.ThreadText}\n            </div></>\n    )\n\n}\n\nexport default GetTitle;","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklists.js",["184","185","186","187","188","189","190","191","192"],"/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport { useChecklist } from 'react-checklist'\nimport { QUERY_USER } from '../../utils/queries';\nimport { UPDATE_HABIT_STATE, DELETE_HABIT_STATE } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\nimport ReactDOM from 'react-dom'\n\n\nexport default ({ checkList }) => {\n  //function to compare two arrays\n  Array.prototype.equals = function (array) {\n    if (!array)\n      return false;\n\n    if (this.length != array.length)\n      return false;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] instanceof Array && array[i] instanceof Array) {\n        if (!this[i].equals(array[i]))\n          return false;\n      }\n      else if (this[i] != array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const { loading, data } = useQuery(QUERY_USER, {\n    variables: { username: Auth.getProfile().data.username }\n  })\n\n  const user = data.user.checkListHabits || []\n  //console.log(user)\n\n  const filteredCheckList = []\n\n  for (let i = 1; i < checkList.length; i++) {\n    filteredCheckList.push(checkList[i])\n  }\n  //console.log(checkList)\n  //console.log(filteredCheckList)\n\n  const importedChecklist = []\n\n  user.forEach(habit => {\n    importedChecklist.push({ name: habit.Name, state: habit.State })\n  });\n\n  console.log(importedChecklist)\n  //console.log(checkList[0])\n\n  const { handleCheck, checkedItems, setCheckedItems } = useChecklist(filteredCheckList, {\n    key: '_id',\n    keyType: 'number',\n  });\n\n  let setArray = []\n\n  const handleLoad = () => {\n    for (let i = 0; i < importedChecklist.length; i++) {\n      if (importedChecklist[i].name === checkList[0]) {\n        let userArray = user[i].State\n        setArray = []\n        for (let i = 0; i < userArray.length; i++) {\n          setArray.push(userArray[i][0])\n        };\n\n        console.log(importedChecklist[i].name)\n        console.log(checkList[0])\n        console.log(setArray)\n        console.log([...checkedItems])\n\n        if (setArray.equals([...checkedItems])) {\n          setArray = []\n          console.log('next')\n        } else {\n          console.log(`set array to ${setArray}`)\n          setCheckedItems(new Set(setArray))\n        }\n\n      } else {\n        console.log('does not exist')\n      }\n\n      setArray = []\n      console.log(setArray)\n    }\n  }\n  const handleReset = () => setCheckedItems(new Set());\n\n  console.log(checkedItems);      // Set(0) - handling with Set\n  console.log([...checkedItems]); // []     - handling with Array\n\n  const [updateHabit, { updateError }] = useMutation(UPDATE_HABIT_STATE);\n  const [deleteHabit, { deleteError }] = useMutation(DELETE_HABIT_STATE);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const deleteData = await deleteHabit({\n        variables: {\n          username: Auth.getProfile().data.username,\n          habit: checkList[0],\n        },\n      });\n\n      const updateData = await updateHabit({\n        variables: {\n          username: Auth.getProfile().data.username,\n          habit: checkList[0],\n          state: [...checkedItems],\n        },\n      });\n\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  // const [updateState, { updateData, updateLoading, updateError }] = useMutation(UPDATE_HABIT_STATE)\n  // if(updateLoading){console.log('loading update')}\n  // if(updateError){console.log('error updating')}\n\n\n  // const handleUpdate = () => {\n  //     updateState({ variables: {\n  //         username: Auth.getProfile().data.username,\n  //         habit: checkList[0],\n  //         state: [...checkedItems]\n  //     }})\n  // }\n\n\n  return (\n    <ul className=\"px-1 pt-3 pb-2 text-md text-base\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', marginLeft: '20px' }} key={'habit'}>\n\n      {filteredCheckList.map((v, i) => (\n        <li key={i} style={{ marginRight: '15px', marginTop: '10px' }}>\n          <input\n            type=\"checkbox\"\n            data-key={v._id}                  // 3\n            onChange={handleCheck}            // 4\n            checked={checkedItems.has(v._id)} // 5\n          />\n          <label>{v.label}</label>\n        </li>\n      ))}\n      <li style={{ marginRight: '10px' }}>\n        <button className=\"py-2 px-4 font-medium text-white bg-gray-500 rounded hover:bg-red-400 transition duration-300\" onClick={handleReset}>\n          Reset\n        </button>\n      </li>\n      <li style={{ marginRight: '10px' }}>\n        <button className=\"Load py-2 px-4 font-medium text-white bg-blue-500 rounded hover:bg-blue-400 transition duration-300\" onClick={handleLoad}>\n          Load\n        </button>\n      </li>\n      <li style={{ marginRight: '10px' }}>\n        <button className=\"py-2 px-4 font-medium text-white bg-green-500 rounded hover:bg-green-400 transition duration-300\" onClick={handleFormSubmit}>\n          Save Progress!\n        </button>\n      </li>\n    </ul>\n\n  );\n};",{"ruleId":"193","severity":1,"message":"194","line":18,"column":8,"nodeType":"195","messageId":"196","endLine":18,"endColumn":22},{"ruleId":"193","severity":1,"message":"197","line":11,"column":13,"nodeType":"195","messageId":"196","endLine":11,"endColumn":20},{"ruleId":"193","severity":1,"message":"198","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"199","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":12},{"ruleId":"193","severity":1,"message":"200","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":18},{"ruleId":"193","severity":1,"message":"201","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":25},{"ruleId":"193","severity":1,"message":"200","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":18},{"ruleId":"193","severity":1,"message":"201","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":6,"column":1,"nodeType":"204","endLine":44,"endColumn":5},{"ruleId":"193","severity":1,"message":"205","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":22},{"ruleId":"193","severity":1,"message":"206","line":6,"column":24,"nodeType":"195","messageId":"196","endLine":6,"endColumn":34},{"ruleId":"193","severity":1,"message":"207","line":22,"column":15,"nodeType":"195","messageId":"196","endLine":22,"endColumn":19},{"ruleId":"193","severity":1,"message":"198","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"200","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":18},{"ruleId":"193","severity":1,"message":"206","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":20},{"ruleId":"193","severity":1,"message":"208","line":8,"column":8,"nodeType":"195","messageId":"196","endLine":8,"endColumn":19},{"ruleId":"193","severity":1,"message":"207","line":19,"column":13,"nodeType":"195","messageId":"196","endLine":19,"endColumn":17},{"ruleId":"193","severity":1,"message":"200","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":18},{"ruleId":"193","severity":1,"message":"209","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":19},{"ruleId":"193","severity":1,"message":"210","line":8,"column":10,"nodeType":"195","messageId":"196","endLine":8,"endColumn":18},{"ruleId":"193","severity":1,"message":"211","line":8,"column":20,"nodeType":"195","messageId":"196","endLine":8,"endColumn":33},{"ruleId":"193","severity":1,"message":"207","line":48,"column":15,"nodeType":"195","messageId":"196","endLine":48,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":11,"column":3,"nodeType":"214","messageId":"215","endLine":28,"endColumn":4},{"ruleId":"216","severity":1,"message":"217","line":15,"column":21,"nodeType":"218","messageId":"215","endLine":15,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":23,"column":24,"nodeType":"218","messageId":"215","endLine":23,"endColumn":26},{"ruleId":"193","severity":1,"message":"197","line":30,"column":11,"nodeType":"195","messageId":"196","endLine":30,"endColumn":18},{"ruleId":"193","severity":1,"message":"219","line":100,"column":25,"nodeType":"195","messageId":"196","endLine":100,"endColumn":36},{"ruleId":"193","severity":1,"message":"220","line":101,"column":25,"nodeType":"195","messageId":"196","endLine":101,"endColumn":36},{"ruleId":"193","severity":1,"message":"221","line":105,"column":13,"nodeType":"195","messageId":"196","endLine":105,"endColumn":23},{"ruleId":"193","severity":1,"message":"222","line":111,"column":13,"nodeType":"195","messageId":"196","endLine":111,"endColumn":23},{"ruleId":"193","severity":1,"message":"198","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"200","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":18},{"ruleId":"193","severity":1,"message":"211","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":23},{"ruleId":"193","severity":1,"message":"210","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":18},{"ruleId":"193","severity":1,"message":"199","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":12},{"ruleId":"193","severity":1,"message":"197","line":13,"column":13,"nodeType":"195","messageId":"196","endLine":13,"endColumn":20},{"ruleId":"193","severity":1,"message":"197","line":8,"column":13,"nodeType":"195","messageId":"196","endLine":8,"endColumn":20},{"ruleId":"193","severity":1,"message":"197","line":11,"column":13,"nodeType":"195","messageId":"196","endLine":11,"endColumn":20},{"ruleId":"193","severity":1,"message":"198","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"210","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":18},{"ruleId":"193","severity":1,"message":"199","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":12},{"ruleId":"193","severity":1,"message":"197","line":9,"column":13,"nodeType":"195","messageId":"196","endLine":9,"endColumn":20},{"ruleId":"193","severity":1,"message":"223","line":8,"column":8,"nodeType":"195","messageId":"196","endLine":8,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":13,"column":3,"nodeType":"214","messageId":"215","endLine":30,"endColumn":4},{"ruleId":"216","severity":1,"message":"217","line":17,"column":21,"nodeType":"218","messageId":"215","endLine":17,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":25,"column":24,"nodeType":"218","messageId":"215","endLine":25,"endColumn":26},{"ruleId":"193","severity":1,"message":"197","line":32,"column":11,"nodeType":"195","messageId":"196","endLine":32,"endColumn":18},{"ruleId":"193","severity":1,"message":"219","line":98,"column":25,"nodeType":"195","messageId":"196","endLine":98,"endColumn":36},{"ruleId":"193","severity":1,"message":"220","line":99,"column":25,"nodeType":"195","messageId":"196","endLine":99,"endColumn":36},{"ruleId":"193","severity":1,"message":"221","line":105,"column":13,"nodeType":"195","messageId":"196","endLine":105,"endColumn":23},{"ruleId":"193","severity":1,"message":"222","line":112,"column":13,"nodeType":"195","messageId":"196","endLine":112,"endColumn":23},"no-unused-vars","'UserThreadList' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'Link' is defined but never used.","'Auth' is defined but never used.","'useQuery' is defined but never used.","'QUERY_LIFESTYLE' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'QUERY_HABITS' is defined but never used.","'QUERY_USER' is defined but never used.","'data' is assigned a value but never used.","'UserThreads' is defined but never used.","'useParams' is defined but never used.","'QUERY_ME' is defined but never used.","'QUERY_THREADS' is defined but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'updateError' is assigned a value but never used.","'deleteError' is assigned a value but never used.","'deleteData' is assigned a value but never used.","'updateData' is assigned a value but never used.","'ReactDOM' is defined but never used."]