[{"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\index.js":"1","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\reportWebVitals.js":"2","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\App.js":"3","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\Home.js":"4","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\SingleThread.js":"5","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\Footer.js":"6","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\Habit.js":"7","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\LoginForm.js":"8","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\SignupForm.js":"9","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\Blog.js":"10","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Header\\Header.js":"11","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\index.js":"12","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\Lifestylepreview.js":"13","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Quote\\Quote.js":"14","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\utils\\auth.js":"15","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\utils\\queries.js":"16","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\utils\\mutations.js":"17","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\HabitForm\\HabitForm.js":"18","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\CommentList\\index.js":"19","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\CommentForm\\index.js":"20","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\ThreadForm\\index.js":"21","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\ThreadList\\index.js":"22","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\userlifestylepreview.js":"23","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\habits.js":"24","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklist.js":"25","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklists.js":"26","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\HabitList.js":"27","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\HabitLists.js":"28","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\habit.js":"29"},{"size":517,"mtime":1637772744753,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1637772744755,"results":"32","hashOfConfig":"31"},{"size":2966,"mtime":1638231814924,"results":"33","hashOfConfig":"31"},{"size":602,"mtime":1638197526414,"results":"34","hashOfConfig":"31"},{"size":1815,"mtime":1638197526416,"results":"35","hashOfConfig":"31"},{"size":690,"mtime":1638217218598,"results":"36","hashOfConfig":"31"},{"size":1771,"mtime":1638241331594,"results":"37","hashOfConfig":"31"},{"size":5653,"mtime":1638231814932,"results":"38","hashOfConfig":"31"},{"size":6471,"mtime":1638231814933,"results":"39","hashOfConfig":"31"},{"size":1055,"mtime":1638231814931,"results":"40","hashOfConfig":"31"},{"size":3469,"mtime":1638231814926,"results":"41","hashOfConfig":"31"},{"size":1085,"mtime":1638197526412,"results":"42","hashOfConfig":"31"},{"size":2655,"mtime":1638197526408,"results":"43","hashOfConfig":"31"},{"size":503,"mtime":1638197504883,"results":"44","hashOfConfig":"31"},{"size":1084,"mtime":1637772744756,"results":"45","hashOfConfig":"31"},{"size":2101,"mtime":1638240123153,"results":"46","hashOfConfig":"31"},{"size":3372,"mtime":1638241104854,"results":"47","hashOfConfig":"31"},{"size":3123,"mtime":1638241424999,"results":"48","hashOfConfig":"31"},{"size":1399,"mtime":1638197526406,"results":"49","hashOfConfig":"31"},{"size":3109,"mtime":1638197526406,"results":"50","hashOfConfig":"31"},{"size":4726,"mtime":1638197526410,"results":"51","hashOfConfig":"31"},{"size":2170,"mtime":1638231814930,"results":"52","hashOfConfig":"31"},{"size":2248,"mtime":1638231814929,"results":"53","hashOfConfig":"31"},{"size":790,"mtime":1638231814928,"results":"54","hashOfConfig":"31"},{"size":1364,"mtime":1638231814927,"results":"55","hashOfConfig":"31"},{"size":5186,"mtime":1638231814927,"results":"56","hashOfConfig":"31"},{"size":1001,"mtime":1638236022350,"results":"57","hashOfConfig":"31"},{"size":5718,"mtime":1638239681195,"results":"58","hashOfConfig":"31"},{"size":510,"mtime":1638239645762,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"kk69ln",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"62"},"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\index.js",[],["132","133"],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\App.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\Home.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\SingleThread.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\Footer.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\Habit.js",["134"],"import { React } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport Habits from '../components/HabitList/habit'\r\nimport HabitList from '../components/HabitList/HabitList'\r\nimport HabitForm from '../components/HabitForm/HabitForm';\r\nimport Auth from '../utils/auth';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\n\r\nconst Habit = () => {\r\n    const { loading, data } = useQuery(QUERY_USER, {\r\n        variables: {\r\n            username: Auth.getProfile().data.username\r\n        }\r\n    });\r\n    const user = data?.user || []\r\n    const habitData = data?.user.userDefinedHabits || []\r\n    console.log()\r\n\r\n    return (\r\n        <div className=\"w-screen\">\r\n            <h3 className=\"mt-6 text-center text-3xl font-bold text-gray-600 mb-10\">Habit List:</h3>\r\n            <div className=\"lg:flex items-center justify-center w-screen\">\r\n                <div className=\"lg:w-3/12 lg:mr-7 lg:ml-7 lg:mb-0 mb-7 bg-white p-6 shadow-xl sm:rounded-xl sm:p-10 bg-opacity-60\">\r\n                    {/* {habitData.map(habit => { */}\r\n                        {/* return ( */}\r\n                            <div>\r\n                                <p className=\"\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around' }}>\r\n                                    <ul style={{ marginLeft: '20px' }}>\r\n                                        <Habits user={user} />\r\n                                    </ul>\r\n                                    <HabitList habit={habitData} />\r\n                                </p>\r\n\r\n                            </div>\r\n                        {/* ) */}\r\n                    {/* })} */}\r\n                    <HabitForm />\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Habit;","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\LoginForm.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\SignupForm.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\pages\\Blog.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\index.js",["135"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_THREADS } from '../../utils/queries';\r\nimport { QUERY_ME } from '../../utils/queries';\r\n\r\nconst UserThreadList = () => {\r\n\r\n    const threadQuery = useQuery(QUERY_THREADS);\r\n    const userQuery = useQuery(QUERY_ME);\r\n\r\n    const loading = threadQuery.loading || userQuery.loading;\r\n\r\n    const thread = threadQuery?.data;\r\n    const users = userQuery?.data;\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    } else{\r\n        console.log(thread, users)\r\n        console.log(thread?.threads[0].ThreadAuthor.username)\r\n    }\r\n\r\n    const userThreads = [];\r\n    // for (let i = 0; i < thread.length; i++) {\r\n    // if(thread?.threads[i].TheadAuthor._id === users?.me[i]._id){  \r\n    //     userThreads.push(thread?.threads[i]);\r\n    //     console.log(userThreads)\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {userThreads.map()}\r\n            hey, {users?.me[0].username}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserThreadList;","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\Lifestylepreview.js",["136","137","138"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport Auth from '../../utils/auth';\r\nimport { QUERY_USER } from '../../utils/queries'\r\nimport Userlifestyle from './userlifestylepreview';\r\n\r\nconst Lifestylepreview = ({ lifeStyles = [] }) => {\r\n    lifeStyles.forEach(lifestyle => {\r\n        console.log(lifestyle.lifeStyleType, lifestyle.LifeStyleHabits)\r\n    });\r\n\r\n    if (!lifeStyles.length) {\r\n        return <h3>nothing to see here...</h3>\r\n    } else if (Auth.loggedIn()) {\r\n        return (\r\n            <div>\r\n                <Userlifestyle />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"w-screen h-auto\">\r\n                <div className=\"py-8 w-screen\">\r\n                    <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-600 mb-10\">What lifestyle would you want...?</h2>\r\n                    <div className=\"lg:flex items-center justify-center w-screen\">\r\n                        {lifeStyles &&\r\n                            lifeStyles.map((lifestyle) => (\r\n                                <div className=\"lg:w-3/12 lg:mr-7 lg:ml-7 lg:mb-0 mb-7 bg-white p-6 shadow-xl sm:rounded-xl sm:p-10 bg-opacity-60\" key={lifestyle._id}>\r\n                                    <div className=\"rounded sm:rounded-xl overflow-hidden shadow-lg bg-opacity-80\">\r\n                                        <div className=\"px-6 py-4\">\r\n                                            <div className=\"\">\r\n                                                <p className=\"text-gray-600 text-xl font-bold text-base text-center \">{lifestyle.lifeStyleType}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"px-6 pt-4 pb-2\">\r\n                                        <p className=\"text-500 text-base\">\r\n                                            <ul style={{ marginLeft: '10px' }}>\r\n                                                {lifestyle.LifeStyleHabits && lifestyle.LifeStyleHabits.map((habit) => (\r\n                                                    <li key={habit.habitName}> - {habit.habitName}</li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lifestylepreview","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Quote\\Quote.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\utils\\auth.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\utils\\queries.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\utils\\mutations.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\HabitForm\\HabitForm.js",["139","140","141"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_USER_HABIT } from '../../utils/mutations';\r\nimport { QUERY_HABITS, QUERY_USER } from '../../utils/queries';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst HabitForm = () => {\r\n  const [ formStateName, setformStateName ] = useState({ habitName:''});\r\n  const [ formStateFrequency, setformStateFrequency ] = useState({ frequency: 0 });\r\n  const [addHabitList, { error }] = useMutation(ADD_USER_HABIT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\nconsole.log({...formStateName,...formStateFrequency})\r\n    try {\r\n\r\n      const { data } = await addHabitList({\r\n        variables: {username: Auth.getProfile().data.username, habit:formStateName.habitName,frequency:Number(formStateFrequency.frequency) }, \r\n      });\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    setformStateName({ habitName:''})\r\n    setformStateFrequency({ frequency: 0 })\r\n  };\r\n  const handleChangeName = (event) => {\r\n    const { value } = event.target;\r\n    setformStateName({ habitName:(value) })\r\n  };\r\n  const handleChangeFrequency = (event) => {\r\n    const { value } = event.target;\r\n    setformStateFrequency({ frequency:(value), })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add Habit</h3>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            // onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"w-full overflow-hidden bg-primary text-light p-2 m-0\">\r\n              <textarea \r\n                name=\"HabitName\"\r\n                placeholder=\"Here's a new Habit...\"\r\n                value={formStateName.habitName}\r\n                onChange={handleChangeName}\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"w-full overflow-hidden bg-primary text-light p-2 m-0\">\r\n              <textarea \r\n                name=\"frequency\"\r\n                placeholder=\"Times per week?\"\r\n                value={formStateFrequency.frequency}\r\n                onChange={handleChangeFrequency}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"w-full overflow-hidden\">\r\n              <button className=\"flex justify-left w-40 py-2 px-4 mt-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-400 hover:bg-blue-500 transition duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" onClick={handleFormSubmit} type=\"submit\">\r\n                Add Habit\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"w-full overflow-hidden\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to create New Habits. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HabitForm;\r\n","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\CommentForm\\index.js",["142"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst CommentForm = ({ threadId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const data = await addComment({\r\n        variables: {\r\n          threadId,\r\n          commentText,\r\n          commentAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap w-full   rounded-lg shadow-xl bg-opacity-60 mt-4\">\r\n      <div className=\"w-full overflow-hidden\">\r\n        <h4 className=\"py-2 px-4 font-medium text-center text-gray-500 text-xl rounded\" >Join the Discussion!</h4>\r\n      </div>\r\n      {Auth.loggedIn() ? (\r\n        <><div className=\"w-full overflow-hidden\">\r\n          <p\r\n            className={`card-header bg-primary text-light p-2 ml-4  ${characterCount === 280 || error ? 'text-danger' : ''\r\n              }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n            {error && <span className=\"ml-2\">{error.message}</span>}\r\n          </p >\r\n          <form\r\n            className=\"w-full overflow-hidden bg-primary text-center text-light p-2 m-0\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"w-full overflow-hidden bg-primary text-center text-light  p-2 m-0\">\r\n              <textarea\r\n                name=\"commentText\"\r\n                placeholder=\"Add your comment...\"\r\n                value={commentText}\r\n                className=\"w-full overflow-hidden bg-primary text-light  p-2 m-0\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"w-full overflow-hidden bg-primary text-center text-light  p-2 m-0\">\r\n              <button className=\"flex justify-center w-40 py-2 px-4 mt-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-400 hover:bg-blue-500 transition duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" type=\"submit\">\r\n                Add Comment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to add a comment. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default CommentForm;","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\ThreadForm\\index.js",["143"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_THREAD } from '../../utils/mutations';\r\nimport { QUERY_ME, QUERY_THREADS } from '../../utils/queries';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst ThreadForm = () => {\r\n  const [ThreadText, setThreadText] = useState('');\r\n  const [ThreadTitle, setThreadTitle] = useState('');\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addThread, { error }] = useMutation(ADD_THREAD, {\r\n    update(cache, { data: { addThread } }) {\r\n      try {\r\n        const { threads } = cache.readQuery({ query: QUERY_THREADS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_THREADS,\r\n          data: { threads: [addThread, ...threads] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, threads: [...me.threads, addThread] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      // getProfile() is unknown so data wont get read\r\n      const { data } = await addThread({\r\n        variables: {\r\n          ThreadText,\r\n          ThreadTitle,\r\n          ThreadAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setThreadTitle('');\r\n      setThreadText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'ThreadText' && value.length <= 1000) {\r\n      setThreadText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  const handleChangeTitle = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'ThreadTitle') {\r\n      setThreadTitle(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap overflow-hidden bg-white rounded-lg shadow-xl bg-opacity-60 mt-4 w-100 mx-80\">\r\n      <div className=\"w-full overflow-hidden\">\r\n        <h3 className=\"py-2 px-4 font-medium text-center text-gray-500 text-xl rounded \">Create your Post here!</h3>\r\n      </div>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <><div className=\"w-full overflow-hidden\">\r\n          <p\r\n            className={`card-header bg-primary text-light p-2 ml-4  ${characterCount === 1000 || error ? 'text-danger' : ''\r\n              }`}\r\n\r\n          >\r\n            Character Count: {characterCount}/1000\r\n          </p>\r\n          <form\r\n            className=\"w-full overflow-hidden bg-primary text-center text-light p-2 m-0\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"w-full overflow-hidden bg-primary text-center text-light  p-2 m-0\">\r\n              <textarea\r\n                name=\"ThreadTitle\"\r\n                placeholder=\"Enter your post title\"\r\n                value={ThreadTitle}\r\n                className=\"w-full overflow-hidden bg-primary text-light  p-2 m-0\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChangeTitle}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"w-full overflow-hidden bg-primary text-center text-light  p-2 m-0\">\r\n              <textarea\r\n                name=\"ThreadText\"\r\n                placeholder=\"Enter your post\"\r\n                value={ThreadText}\r\n                className=\"w-full overflow-hidden bg-primary text-light  p-2 m-0\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"flex justify-center w-40 py-2 px-4 mt-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-400 hover:bg-blue-500 transition duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\" type=\"submit\">\r\n                Add Thread\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"w-full overflow-hidden\">\r\n          <h3 className=\"card-header bg-primary text-center text-light p-2 m-0\">\r\n            You need to be logged in to make a thread. Please <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n          </h3>\r\n        </div>\r\n\r\n      )}\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadForm;","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\ThreadList\\index.js",[],"C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\userlifestylepreview.js",["144"],"import React from 'react'\r\nimport { useQuery } from '@apollo/client'\r\n\r\nimport { QUERY_USER } from '../../utils/queries'\r\nimport Auth from '../../utils/auth';\r\n\r\nimport Habits from './habits'\r\nimport Checklist from './checklist'\r\n\r\nconst Userlifestyle = () => {\r\n    console.log(Auth.getProfile().data.username)\r\n    const { loading, data } = useQuery(QUERY_USER, {\r\n        variables: { username: Auth.getProfile().data.username }\r\n    })\r\n    console.log(data)\r\n    const user = data?.user || []\r\n\r\n    console.log(Auth.getProfile().data)\r\n    console.log(user)\r\n\r\n    return (\r\n        <div className=\"h-auto py-6 flex flex-col justify-center sm:py-12\" style={{\r\n            background: `url(\"https://picsum.photos/id/1018/1000\")`, backgroundSize: 'cover', backgroundAttachment: 'fixed'\r\n        }}>\r\n            <div className=\"py-8 w-screen\">\r\n                <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-800 mb-10\">Your lifestyle:</h2>\r\n                <div className=\"lg:flex items-center justify-center w-screen\">\r\n                    <div className=\"lg:w-8/12 lg:mr-7 lg:mb-0 mb-7 bg-white p-6 shadow rounded bg-opacity-80\" key={user.username}>\r\n                        <div className=\"flex items-center border-b border-gray-200 pb-6\">\r\n                            <div className=\"flex items-start justify-between w-full\">\r\n                                <div className=\"pl-3 w-full\">\r\n                                    <p className=\"text-gray-600 text-xl font-bold text-base text-center\">{user.userLifeStyle}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"px-2\">\r\n                            <p className=\"\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around' }}>\r\n                                <ul style={{ marginLeft: '20px' }}>\r\n                                    <Habits user={user} />\r\n                                </ul>\r\n                                <Checklist user={user} />\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Userlifestyle","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\habits.js",["145"],"import React from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\r\n\r\nconst Habits = ({ user }) => {\r\n    console.log(user.userLifeStyle)\r\n    const userlifestyle = user.userLifeStyle\r\n    const { loading, data } = useQuery(QUERY_LIFESTYLE, {\r\n        variables: { LifeStyle: userlifestyle }\r\n    })\r\n    console.log(data)\r\n    const lifestyle = data?.lifeStyle || []\r\n    console.log(lifestyle)\r\n\r\n    return (\r\n        <div className=\"flex flex-col\">\r\n            {lifestyle.LifeStyleHabits && lifestyle.LifeStyleHabits.map((habit) => (\r\n                <li className=\"pb-3 mt-5 text-xl font-bold underline text-base\" key={habit.habitName}>{habit.habitName}:</li>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Habits","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklist.js",["146"],"/* eslint-disable import/no-anonymous-default-export */\r\nimport React from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\r\nimport Checklists from './checklists';\r\n\r\nexport default ({ user }) => {\r\n    console.log(user.userLifeStyle)\r\n    const userlifestyle = user.userLifeStyle\r\n    console.log(userlifestyle)\r\n    const { loading, data } = useQuery(QUERY_LIFESTYLE, {\r\n        variables: { LifeStyle: userlifestyle }\r\n    })\r\n    console.log(data)\r\n    const lifestyle = data?.lifeStyle.LifeStyleHabits || []\r\n    console.log(lifestyle)\r\n\r\n    const allHabits = []\r\n\r\n    lifestyle.forEach(habit => {\r\n        allHabits.push({ name: habit.habitName, frequency: habit.frequency })\r\n    });\r\n    console.log(allHabits)\r\n\r\n    const allChecklists = []\r\n\r\n    for (let i = 0; i < allHabits.length; i++) {\r\n        const checkList = [allHabits[i].name]\r\n\r\n        for (let j = 0; j < allHabits[i].frequency; j++) {\r\n            checkList.push({ _id: j, label: `Day ${j + 1}` })\r\n        }\r\n        console.log(checkList)\r\n        allChecklists.push(checkList)\r\n    }\r\n\r\n    console.log(allChecklists)\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n        <div>\r\n            {allChecklists && allChecklists.map((checklist) => (\r\n                <Checklists checkList={checklist} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\n","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklists.js",["147","148","149","150","151","152","153","154","155"],"/* eslint-disable import/no-anonymous-default-export */\r\nimport React from 'react'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { useChecklist } from 'react-checklist'\r\nimport { QUERY_USER } from '../../utils/queries';\r\nimport { UPDATE_HABIT_STATE, DELETE_HABIT_STATE } from '../../utils/mutations';\r\nimport Auth from '../../utils/auth';\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nexport default ({ checkList }) => {\r\n  //function to compare two arrays\r\n  Array.prototype.equals = function (array) {\r\n    if (!array)\r\n      return false;\r\n\r\n    if (this.length != array.length)\r\n      return false;\r\n\r\n    for (var i = 0, l = this.length; i < l; i++) {\r\n      if (this[i] instanceof Array && array[i] instanceof Array) {\r\n        if (!this[i].equals(array[i]))\r\n          return false;\r\n      }\r\n      else if (this[i] != array[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const { loading, data } = useQuery(QUERY_USER, {\r\n    variables: { username: Auth.getProfile().data.username }\r\n  })\r\n\r\n  const user = data.user.checkListHabits || []\r\n  //console.log(user)\r\n\r\n  const filteredCheckList = []\r\n\r\n  for (let i = 1; i < checkList.length; i++) {\r\n    filteredCheckList.push(checkList[i])\r\n  }\r\n  //console.log(checkList)\r\n  //console.log(filteredCheckList)\r\n\r\n  const importedChecklist = []\r\n\r\n  user.forEach(habit => {\r\n    importedChecklist.push({ name: habit.Name, state: habit.State })\r\n  });\r\n\r\n  console.log(importedChecklist)\r\n  //console.log(checkList[0])\r\n\r\n  const { handleCheck, checkedItems, setCheckedItems } = useChecklist(filteredCheckList, {\r\n    key: '_id',\r\n    keyType: 'number',\r\n  });\r\n\r\n  let setArray = []\r\n\r\n  const handleLoad = () => {\r\n    for (let i = 0; i < importedChecklist.length; i++) {\r\n      if (importedChecklist[i].name === checkList[0]) {\r\n        let userArray = user[i].State\r\n        setArray = []\r\n        for (let i = 0; i < userArray.length; i++) {\r\n          setArray.push(userArray[i][0])\r\n        };\r\n\r\n        console.log(importedChecklist[i].name)\r\n        console.log(checkList[0])\r\n        console.log(setArray)\r\n        console.log([...checkedItems])\r\n\r\n        if (setArray.equals([...checkedItems])) {\r\n          setArray = []\r\n          console.log('next')\r\n        } else {\r\n          console.log(`set array to ${setArray}`)\r\n          setCheckedItems(new Set(setArray))\r\n        }\r\n\r\n      } else {\r\n        console.log('does not exist')\r\n      }\r\n\r\n      setArray = []\r\n      console.log(setArray)\r\n    }\r\n  }\r\n  const handleReset = () => setCheckedItems(new Set());\r\n\r\n  console.log(checkedItems);      // Set(0) - handling with Set\r\n  console.log([...checkedItems]); // []     - handling with Array\r\n\r\n  const [updateHabit, { updateError }] = useMutation(UPDATE_HABIT_STATE);\r\n  const [deleteHabit, { deleteError }] = useMutation(DELETE_HABIT_STATE);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const deleteData = await deleteHabit({\r\n        variables: {\r\n          username: Auth.getProfile().data.username,\r\n          habit: checkList[0],\r\n        },\r\n      });\r\n\r\n      const updateData = await updateHabit({\r\n        variables: {\r\n          username: Auth.getProfile().data.username,\r\n          habit: checkList[0],\r\n          state: [...checkedItems],\r\n        },\r\n      });\r\n\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  // const [updateState, { updateData, updateLoading, updateError }] = useMutation(UPDATE_HABIT_STATE)\r\n  // if(updateLoading){console.log('loading update')}\r\n  // if(updateError){console.log('error updating')}\r\n\r\n\r\n  // const handleUpdate = () => {\r\n  //     updateState({ variables: {\r\n  //         username: Auth.getProfile().data.username,\r\n  //         habit: checkList[0],\r\n  //         state: [...checkedItems]\r\n  //     }})\r\n  // }\r\n\r\n\r\n  return (\r\n    <ul className=\"px-4 pt-2 pb-2 text-xl text-base\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: '20px' }} key={'habit'}>\r\n\r\n      {filteredCheckList.map((v, i) => (\r\n        <li key={i} style={{ marginRight: '15px', marginTop: '10px' }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            data-key={v._id}                  // 3\r\n            onChange={handleCheck}            // 4\r\n            checked={checkedItems.has(v._id)} // 5\r\n          />\r\n          <label>{v.label}</label>\r\n        </li>\r\n      ))}\r\n      <li style={{ marginRight: '10px' }}>\r\n        <button className=\"py-2 px-4 font-medium text-white bg-gray-500 rounded hover:bg-red-400 transition duration-300\" onClick={handleReset}>\r\n          Reset\r\n        </button>\r\n      </li>\r\n      <li style={{ marginRight: '10px' }}>\r\n        <button className=\"Load py-2 px-4 font-medium text-white bg-blue-500 rounded hover:bg-blue-400 transition duration-300\" onClick={handleLoad}>\r\n          Load\r\n        </button>\r\n      </li>\r\n      <li style={{ marginRight: '10px' }}>\r\n        <button className=\"py-2 px-4 font-medium text-white bg-green-500 rounded hover:bg-green-400 transition duration-300\" onClick={handleFormSubmit}>\r\n          Save Progress!\r\n        </button>\r\n      </li>\r\n    </ul>\r\n\r\n  );\r\n};","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\HabitList.js",["156","157","158"],"import React from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\r\nimport HabitLists from './HabitLists'\r\n\r\nexport default ({habit}) => {\r\n\r\n\r\n    console.log(habit)\r\n\r\n    const allHabits = []\r\n\r\n    habit.forEach(habit => {\r\n        allHabits.push({ name: habit.habitName, frequency: habit.frequency})\r\n    });\r\n    console.log(allHabits)\r\n\r\n    const allChecklists = []\r\n\r\n    for(let i = 0; i < allHabits.length; i++){\r\n        const checkList = [allHabits[i].name]\r\n        \r\n        for(let j = 0; j < allHabits[i].frequency; j++){\r\n            checkList.push({_id: j, label: `Day ${j +1}`})\r\n        }\r\n        console.log(checkList)\r\n        allChecklists.push(checkList)\r\n    }\r\n\r\n    console.log(allChecklists)\r\n    \r\n    return (\r\n\r\n\r\n        \r\n\r\n\r\n        <div>\r\n            {allChecklists && allChecklists.map((checklist) => (\r\n                <HabitLists checkList = {checklist} />\r\n            ))}\r\n        </div> \r\n    );\r\n  };","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\HabitLists.js",["159","160","161","162","163","164","165","166","167"],"import React from 'react'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { useChecklist } from 'react-checklist'\r\nimport { QUERY_USER } from '../../utils/queries';\r\nimport { UPDATE_USER_HABIT_STATE, DELETE_USER_HABIT_STATE } from '../../utils/mutations';\r\nimport Auth from '../../utils/auth';\r\n\r\nexport default ({checkList}) => {\r\n    //function to compare two arrays\r\n    Array.prototype.equals = function (array) {\r\n        if (!array)\r\n            return false;\r\n\r\n        if (this.length != array.length)\r\n            return false;\r\n    \r\n        for (var i = 0, l=this.length; i < l; i++) {\r\n            if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                if (!this[i].equals(array[i]))\r\n                    return false;       \r\n            }           \r\n            else if (this[i] != array[i]) { \r\n                return false;   \r\n            }           \r\n        }       \r\n        return true;\r\n    }\r\n\r\n    const { loading, data } = useQuery(QUERY_USER, {\r\n        variables: { username: Auth.getProfile().data.username}\r\n    })\r\n\r\n    const user = data.user.userCheckListHabits || []\r\n    console.log(data.user)\r\n\r\n    const filteredCheckList = []\r\n    \r\n    for(let i = 1; i < checkList.length; i++) {\r\n        filteredCheckList.push(checkList[i])\r\n    }\r\n    //console.log(checkList)\r\n    //console.log(filteredCheckList)\r\n\r\n    const importedChecklist = []\r\n\r\n    user.forEach(habit => {\r\n        importedChecklist.push({name: habit.Name, state: habit.State})\r\n    });\r\n\r\n    console.log(importedChecklist)\r\n    //console.log(checkList[0])\r\n    \r\n    const { handleCheck, checkedItems, setCheckedItems } = useChecklist(filteredCheckList, {\r\n      key: '_id',\r\n      keyType: 'number',\r\n    });\r\n\r\n    let setArray = []\r\n    console.log(importedChecklist)\r\n    console.log(checkList[0])\r\n    const handleLoad = () => {\r\n        console.log('loading')\r\n        for(let i = 0; i < importedChecklist.length; i++){\r\n\r\n            if(importedChecklist[i].name === checkList[0]){\r\n                let userArray = user[i].State\r\n                setArray = []\r\n                for(let i = 0; i < userArray.length; i++){\r\n                    setArray.push(userArray[i][0])\r\n                };\r\n\r\n                console.log(importedChecklist[i].name)\r\n                console.log(checkList[0])\r\n                console.log(setArray)\r\n                console.log([...checkedItems])\r\n\r\n                if(setArray.equals([...checkedItems])) {\r\n                    setArray = []\r\n                    console.log('next')\r\n                } else {\r\n                    console.log(`set array to ${setArray}`)\r\n                    setCheckedItems(new Set(setArray))\r\n                }\r\n                \r\n            } else {\r\n                console.log('does not exist')\r\n            }\r\n\r\n            setArray = []\r\n            console.log(setArray)\r\n        }\r\n    }\r\n    \r\n    const handleReset = () => setCheckedItems(new Set());\r\n  \r\n    console.log(checkedItems);      // Set(0) - handling with Set\r\n    console.log([...checkedItems]); // []     - handling with Array\r\n\r\n    const [updateHabit, { updateError }] = useMutation(UPDATE_USER_HABIT_STATE);\r\n    const [deleteHabit, { deleteError }] = useMutation(DELETE_USER_HABIT_STATE);\r\n    const handleFormSubmit = async (event) => {\r\n      event.preventDefault();\r\n      try {\r\n        const deleteData = await deleteHabit({\r\n          variables: {\r\n            username: Auth.getProfile().data.username,\r\n            habit: checkList[0],\r\n          },\r\n        });\r\n        const updateData = await updateHabit({\r\n          variables: {\r\n            username: Auth.getProfile().data.username,\r\n            habit: checkList[0],\r\n            state: [...checkedItems],\r\n          },\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    // const [updateState, { updateData, updateLoading, updateError }] = useMutation(UPDATE_HABIT_STATE)\r\n    // if(updateLoading){console.log('loading update')}\r\n    // if(updateError){console.log('error updating')}\r\n    // const handleUpdate = () => {\r\n    //     updateState({ variables: {\r\n    //         username: Auth.getProfile().data.username,\r\n    //         habit: checkList[0],\r\n    //         state: [...checkedItems]\r\n    //     }})\r\n    // }\r\n    return (\r\n      <ul className=\"px-4 pt-2 pb-2 text-xl text-base\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginLeft: '20px' }} key={'habit'}>\r\n        {filteredCheckList.map((v, i) => (\r\n          <li key={i} style={{ marginRight: '15px', marginTop: '10px' }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              data-key={v._id}                  // 3\r\n              onChange={handleCheck}            // 4\r\n              checked={checkedItems.has(v._id)} // 5\r\n            />\r\n            <label>{v.label}</label>\r\n          </li>\r\n        ))}\r\n        <li style={{ marginRight: '10px' }}>\r\n          <button className=\"py-2 px-4 font-medium text-white bg-gray-500 rounded hover:bg-red-400 transition duration-300\" onClick={handleReset}>\r\n            Reset\r\n          </button>\r\n        </li>\r\n        <li style={{ marginRight: '10px' }}>\r\n          <button className=\"Load py-2 px-4 font-medium text-white bg-blue-500 rounded hover:bg-blue-400 transition duration-300\" onClick={handleLoad}>\r\n            Load\r\n          </button>\r\n        </li>\r\n        <li style={{ marginRight: '10px' }}>\r\n          <button className=\"py-2 px-4 font-medium text-white bg-green-500 rounded hover:bg-green-400 transition duration-300\" onClick={handleFormSubmit}>\r\n            Save Progress!\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    );\r\n  };","C:\\Users\\ptant\\Desktop\\iGrowFree\\client\\src\\components\\HabitList\\habit.js",["168","169"],"import React from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\r\n\r\nconst Habits = ({ user }) => {\r\n    console.log(user)\r\n    return (\r\n        <div className=\"flex flex-col\">\r\n            {user.userDefinedHabits && user.userDefinedHabits.map((habit) => (\r\n                <li className=\"pb-3 mt-5 text-xl font-bold underline text-base\" key={habit.habitName}>{habit.habitName}:</li>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Habits",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":11,"column":13,"nodeType":"176","messageId":"177","endLine":11,"endColumn":20},{"ruleId":"174","severity":1,"message":"178","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"178","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"179","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":18},{"ruleId":"174","severity":1,"message":"180","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":20},{"ruleId":"174","severity":1,"message":"181","line":6,"column":10,"nodeType":"176","messageId":"177","endLine":6,"endColumn":22},{"ruleId":"174","severity":1,"message":"180","line":6,"column":24,"nodeType":"176","messageId":"177","endLine":6,"endColumn":34},{"ruleId":"174","severity":1,"message":"182","line":20,"column":15,"nodeType":"176","messageId":"177","endLine":20,"endColumn":19},{"ruleId":"174","severity":1,"message":"182","line":19,"column":13,"nodeType":"176","messageId":"177","endLine":19,"endColumn":17},{"ruleId":"174","severity":1,"message":"182","line":43,"column":15,"nodeType":"176","messageId":"177","endLine":43,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":12,"column":13,"nodeType":"176","messageId":"177","endLine":12,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":8,"column":13,"nodeType":"176","messageId":"177","endLine":8,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":11,"column":13,"nodeType":"176","messageId":"177","endLine":11,"endColumn":20},{"ruleId":"174","severity":1,"message":"183","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":13,"column":3,"nodeType":"186","messageId":"187","endLine":30,"endColumn":4},{"ruleId":"188","severity":1,"message":"189","line":17,"column":21,"nodeType":"190","messageId":"187","endLine":17,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":25,"column":24,"nodeType":"190","messageId":"187","endLine":25,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":32,"column":11,"nodeType":"176","messageId":"177","endLine":32,"endColumn":18},{"ruleId":"174","severity":1,"message":"191","line":98,"column":25,"nodeType":"176","messageId":"177","endLine":98,"endColumn":36},{"ruleId":"174","severity":1,"message":"192","line":99,"column":25,"nodeType":"176","messageId":"177","endLine":99,"endColumn":36},{"ruleId":"174","severity":1,"message":"193","line":105,"column":13,"nodeType":"176","messageId":"177","endLine":105,"endColumn":23},{"ruleId":"174","severity":1,"message":"194","line":112,"column":13,"nodeType":"176","messageId":"177","endLine":112,"endColumn":23},{"ruleId":"174","severity":1,"message":"179","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":18},{"ruleId":"174","severity":1,"message":"195","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":25},{"ruleId":"196","severity":1,"message":"197","line":6,"column":1,"nodeType":"198","endLine":44,"endColumn":5},{"ruleId":"196","severity":1,"message":"197","line":8,"column":1,"nodeType":"198","endLine":161,"endColumn":5},{"ruleId":"184","severity":1,"message":"185","line":10,"column":5,"nodeType":"186","messageId":"187","endLine":27,"endColumn":6},{"ruleId":"188","severity":1,"message":"189","line":14,"column":25,"nodeType":"190","messageId":"187","endLine":14,"endColumn":27},{"ruleId":"188","severity":1,"message":"189","line":22,"column":30,"nodeType":"190","messageId":"187","endLine":22,"endColumn":32},{"ruleId":"174","severity":1,"message":"175","line":29,"column":13,"nodeType":"176","messageId":"177","endLine":29,"endColumn":20},{"ruleId":"174","severity":1,"message":"191","line":99,"column":27,"nodeType":"176","messageId":"177","endLine":99,"endColumn":38},{"ruleId":"174","severity":1,"message":"192","line":100,"column":27,"nodeType":"176","messageId":"177","endLine":100,"endColumn":38},{"ruleId":"174","severity":1,"message":"193","line":104,"column":15,"nodeType":"176","messageId":"177","endLine":104,"endColumn":25},{"ruleId":"174","severity":1,"message":"194","line":110,"column":15,"nodeType":"176","messageId":"177","endLine":110,"endColumn":25},{"ruleId":"174","severity":1,"message":"179","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":18},{"ruleId":"174","severity":1,"message":"195","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":25},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useQuery' is defined but never used.","'QUERY_USER' is defined but never used.","'QUERY_HABITS' is defined but never used.","'data' is assigned a value but never used.","'ReactDOM' is defined but never used.","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'updateError' is assigned a value but never used.","'deleteError' is assigned a value but never used.","'deleteData' is assigned a value but never used.","'updateData' is assigned a value but never used.","'QUERY_LIFESTYLE' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]