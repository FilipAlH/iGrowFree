[{"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\index.js":"1","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\reportWebVitals.js":"2","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\App.js":"3","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Blog.js":"4","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Home.js":"5","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\LoginForm.js":"6","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\SignupForm.js":"7","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Footer.js":"8","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Header\\Header.js":"9","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\SingleThread.js":"10","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\index.js":"11","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Quote\\Quote.js":"12","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\Lifestylepreview.js":"13","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\auth.js":"14","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\queries.js":"15","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\mutations.js":"16","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\ThreadForm\\index.js":"17","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\ThreadList\\index.js":"18","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\CommentList\\index.js":"19","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\userlifestylepreview.js":"20","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\CommentForm\\index.js":"21","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\habits.js":"22","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklist.js":"23","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklists.js":"24"},{"size":500,"mtime":1637686352666,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1637686352667,"results":"27","hashOfConfig":"26"},{"size":2682,"mtime":1638178331159,"results":"28","hashOfConfig":"26"},{"size":884,"mtime":1638178399622,"results":"29","hashOfConfig":"26"},{"size":580,"mtime":1638170422986,"results":"30","hashOfConfig":"26"},{"size":5581,"mtime":1638170422987,"results":"31","hashOfConfig":"26"},{"size":6349,"mtime":1638170422988,"results":"32","hashOfConfig":"26"},{"size":913,"mtime":1638170422985,"results":"33","hashOfConfig":"26"},{"size":2620,"mtime":1638170422973,"results":"34","hashOfConfig":"26"},{"size":1756,"mtime":1638177479316,"results":"35","hashOfConfig":"26"},{"size":1045,"mtime":1638170436789,"results":"36","hashOfConfig":"26"},{"size":522,"mtime":1638170422978,"results":"37","hashOfConfig":"26"},{"size":2600,"mtime":1638170422975,"results":"38","hashOfConfig":"26"},{"size":1043,"mtime":1637686352669,"results":"39","hashOfConfig":"26"},{"size":1656,"mtime":1638170436793,"results":"40","hashOfConfig":"26"},{"size":1704,"mtime":1638170436792,"results":"41","hashOfConfig":"26"},{"size":4584,"mtime":1638178458032,"results":"42","hashOfConfig":"26"},{"size":2105,"mtime":1638171253359,"results":"43","hashOfConfig":"26"},{"size":1358,"mtime":1638177860465,"results":"44","hashOfConfig":"26"},{"size":2085,"mtime":1638170422977,"results":"45","hashOfConfig":"26"},{"size":3021,"mtime":1638177926862,"results":"46","hashOfConfig":"26"},{"size":676,"mtime":1638034077909,"results":"47","hashOfConfig":"26"},{"size":1184,"mtime":1638117836003,"results":"48","hashOfConfig":"26"},{"size":1183,"mtime":1638170436786,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"3btev0",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\index.js",[],["106","107"],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\reportWebVitals.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\App.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Blog.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Home.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\LoginForm.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\SignupForm.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\Footer.js",["108","109"],"import React, { useState, useEffect } from 'react'\nimport Quote from '../components/Quote/Quote';\n\n// import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_QUOTES } from '../utils/queries';\n\nconst Footer = () => {\n    const { loading, data } = useQuery(QUERY_QUOTES);\n    const quotes = data?.quotes || []\n    // const [selectedQuote, setSelectedQuote] = useState({ _id: \"\", author: \"\", description: \"\" })\n\n\n    if (loading) {\n        console.log(\"loading\")\n    } else {\n        console.log(quotes, \"Graphql get quotes route\")\n\n    }\n\n\n    return (\n        <footer className=\"h-20 bg-blue-500\">\n            {loading ?\n                <div>Loading...</div>\n                :\n                <div className=\"text-center text-gray mt-4 bg-blue-500\">\n                    <Quote quotes={quotes} />\n                </div>}\n        </footer>\n    )\n}\n\n\nexport default Footer;","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Header\\Header.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\pages\\SingleThread.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\UserThreadList\\index.js",["110"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_THREADS } from '../../utils/queries';\nimport { QUERY_ME } from '../../utils/queries';\n\nconst UserThreadList = () => {\n\n    const threadQuery = useQuery(QUERY_THREADS);\n    const userQuery = useQuery(QUERY_ME);\n\n    const loading = threadQuery.loading || userQuery.loading;\n\n    const thread = threadQuery?.data;\n    const users = userQuery?.data;\n\n    if (loading) {\n        return <div>Loading...</div>;\n    } else{\n        console.log(thread, users)\n        console.log(thread?.threads[0].ThreadAuthor.username)\n    }\n\n    const userThreads = [];\n    // for (let i = 0; i < thread.length; i++) {\n    // if(thread?.threads[i].TheadAuthor._id === users?.me[i]._id){  \n    //     userThreads.push(thread?.threads[i]);\n    //     console.log(userThreads)\n    // }\n\n\n    return (\n        <div>\n            {userThreads.map()}\n            hey, {users?.me[0].username}\n        </div>\n    )\n\n}\n\nexport default UserThreadList;","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Quote\\Quote.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\Lifestylepreview.js",["111","112","113"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Auth from '../../utils/auth';\nimport { QUERY_USER } from '../../utils/queries'\nimport Userlifestyle from './userlifestylepreview';\n\nconst Lifestylepreview = ({ lifeStyles = [] }) => {\n    lifeStyles.forEach(lifestyle => {\n        console.log(lifestyle.lifeStyleType, lifestyle.LifeStyleHabits)\n    });\n\n    if (!lifeStyles.length) {\n        return <h3>nothing to see here...</h3>\n    } else if (Auth.loggedIn()) {\n        return (\n            <div>\n                <Userlifestyle />\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"w-screen h-auto\">\n                <div className=\"py-8 w-screen\">\n                    <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-600 mb-10\">What lifestyle would you want...?</h2>\n                    <div className=\"lg:flex items-center justify-center w-screen\">\n                        {lifeStyles &&\n                            lifeStyles.map((lifestyle) => (\n                                <div className=\"lg:w-3/12 lg:mr-7 lg:ml-7 lg:mb-0 mb-7 bg-white p-6 shadow-xl sm:rounded-xl sm:p-10 bg-opacity-60\" key={lifestyle._id}>\n                                    <div className=\"rounded sm:rounded-xl overflow-hidden shadow-lg bg-opacity-80\">\n                                        <div className=\"px-6 py-4\">\n                                            <div className=\"\">\n                                                <p className=\"text-gray-600 text-xl font-bold text-base text-center \">{lifestyle.lifeStyleType}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"px-6 pt-4 pb-2\">\n                                        <p className=\"text-500 text-base\">\n                                            <ul style={{ marginLeft: '10px' }}>\n                                                {lifestyle.LifeStyleHabits && lifestyle.LifeStyleHabits.map((habit) => (\n                                                    <li key={habit.habitName}> - {habit.habitName}</li>\n                                                ))}\n                                            </ul>\n                                        </p>\n                                    </div>\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Lifestylepreview","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\auth.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\queries.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\utils\\mutations.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\ThreadForm\\index.js",["114"],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\ThreadList\\index.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\userlifestylepreview.js",["115"],"import React from 'react'\nimport { useQuery } from '@apollo/client'\n\nimport { QUERY_USER } from '../../utils/queries'\nimport Auth from '../../utils/auth';\n\nimport Habits from './habits'\nimport Checklist from './checklist'\n\nconst Userlifestyle = () => {\n    console.log(Auth.getProfile().data.username)\n    const { loading, data } = useQuery(QUERY_USER, {\n        variables: { username: Auth.getProfile().data.username }\n    })\n    console.log(data)\n    const user = data?.user || []\n\n    console.log(Auth.getProfile().data)\n    console.log(user)\n\n    return (\n        <div className=\"min-h-screen py-6 flex flex-col justify-center sm:py-12\" style={{\n            background: `url(\"https://picsum.photos/id/1018/1000\")`, backgroundSize: 'cover'\n        }}>\n            <div className=\"py-8 w-screen\">\n                <h2>Your lifestyle:</h2>\n                <div className=\"lg:flex items-center justify-center w-screen\">\n                    <div className=\"lg:w-8/12 lg:mr-7 lg:mb-0 mb-7 bg-white p-6 shadow rounded\" key={user.username}>\n                        <div className=\"flex items-center border-b border-gray-200 pb-6\">\n                            <div className=\"flex items-start justify-between w-full\">\n                                <div className=\"pl-3 w-full\">\n                                    <p className=\"text-xl font-medium leading-5 text-gray-800\">{user.userLifeStyle}</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"px-2\">\n                            <p className=\"text-sm leading-5 py-4 text-gray-600\" style={{ display: 'flex', flexDirection: 'row' }}>\n                                <ul style={{ marginLeft: '20px' }}>\n                                    <Habits user={user} />\n                                </ul>\n                                <Checklist user={user} />\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Userlifestyle","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\CommentForm\\index.js",["116"],"C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\habits.js",["117"],"import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\n\nconst Habits = ({user}) => {\n    console.log(user.userLifeStyle)\n    const userlifestyle = user.userLifeStyle\n    const { loading, data } = useQuery(QUERY_LIFESTYLE, {\n        variables: { LifeStyle: userlifestyle}\n    })\n    console.log(data)\n    const lifestyle = data?.lifeStyle || []\n    console.log(lifestyle)\n\n    return(\n        <div>\n            {lifestyle.LifeStyleHabits && lifestyle.LifeStyleHabits.map((habit) => (\n                <li key={habit.habitName}>{habit.habitName}</li>\n            ))}\n        </div>\n    )\n}\n\nexport default Habits","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklist.js",["118","119"],"import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { QUERY_LIFESTYLE } from '../../utils/queries'\nimport Checklists from './checklists';\n\n\n\n\nexport default ({user}) => {\n    console.log(user.userLifeStyle)\n    const userlifestyle = user.userLifeStyle\n    const { loading, data } = useQuery(QUERY_LIFESTYLE, {\n        variables: { LifeStyle: userlifestyle}\n    })\n    console.log(data)\n    const lifestyle = data?.lifeStyle.LifeStyleHabits || []\n    console.log(lifestyle)\n\n    const allHabits = []\n\n    lifestyle.forEach(habit => {\n        allHabits.push({ name: habit.habitName, frequency: habit.frequency})\n    });\n    console.log(allHabits)\n\n    const allChecklists = []\n\n    for(let i = 0; i < allHabits.length; i++){\n        const checkList = []\n        \n        for(let j = 0; j < allHabits[i].frequency; j++){\n            checkList.push({_id: j, label: `Day ${j +1}`})\n        }\n\n        allChecklists.push(checkList)\n    }\n\n    console.log(allChecklists)\n    \n    return (\n        <div>\n            {allChecklists && allChecklists.map((checklist) => (\n                <Checklists checkList = {checklist} />\n            ))}\n        </div>\n    );\n  };\n  ","C:\\Users\\romzz\\Desktop\\iGrowFree\\client\\src\\components\\Lifestyle\\checklists.js",["120","121"],"import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { useChecklist } from 'react-checklist'\n\nexport default ({checkList}) => {\n    \n    const { handleCheck, checkedItems, setCheckedItems } = useChecklist(checkList, {\n      key: '_id',\n      keyType: 'number',\n    });\n\n    const handleReset = () => setCheckedItems(new Set());\n  \n    console.log(checkedItems);      // Set(0) - handling with Set\n    console.log([...checkedItems]); // []     - handling with Array\n\n    return (\n      <ul style={{display: 'flex', flexDirection: 'row', alignItems: 'center', marginLeft: '20px'}} key={'habit'}>\n\n        {checkList.map((v, i) => (\n          <li key={i} style={{marginRight: '10px'}}>\n            <input\n              type=\"checkbox\"\n              data-key={v._id}                  // 3\n              onChange={handleCheck}            // 4\n              checked={checkedItems.has(v._id)} // 5\n            />\n            <label>{v.label}</label>\n          </li>\n        ))}\n            <li style={{marginRight: '10px'}}>\n                <button onClick={handleReset}>\n                Reset\n                </button>\n            </li>\n      </ul>\n      \n    );\n  };",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"130","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"131","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"131","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"132","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":18},{"ruleId":"126","severity":1,"message":"133","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":20},{"ruleId":"126","severity":1,"message":"134","line":43,"column":15,"nodeType":"128","messageId":"129","endLine":43,"endColumn":19},{"ruleId":"126","severity":1,"message":"135","line":12,"column":13,"nodeType":"128","messageId":"129","endLine":12,"endColumn":20},{"ruleId":"126","severity":1,"message":"134","line":19,"column":13,"nodeType":"128","messageId":"129","endLine":19,"endColumn":17},{"ruleId":"126","severity":1,"message":"135","line":8,"column":13,"nodeType":"128","messageId":"129","endLine":8,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":9,"column":1,"nodeType":"138","endLine":47,"endColumn":5},{"ruleId":"126","severity":1,"message":"135","line":12,"column":13,"nodeType":"128","messageId":"129","endLine":12,"endColumn":20},{"ruleId":"126","severity":1,"message":"132","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":5,"column":1,"nodeType":"138","endLine":39,"endColumn":5},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'useQuery' is defined but never used.","'QUERY_USER' is defined but never used.","'data' is assigned a value but never used.","'loading' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]